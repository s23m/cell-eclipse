//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b52-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.23 at 04:41:58 PM CET 
//


package org.s23m.cell.serialization;

import javax.xml.bind.annotation.XmlRegistry;
import org.s23m.cell.serialization.EdgeType.EdgeEnd;
import org.s23m.cell.serialization.S23M.Instance;
import org.s23m.cell.serialization.InstanceType.Values;
import org.s23m.cell.serialization.InstanceType.Variables;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.s23m.cell.serialization package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  F_InstantiationImpl methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.s23m.cell.serialization
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link S23M }
     * 
     */
    public S23M createS23M() {
        return new S23M();
    }

    /**
     * Create an instance of {@link OrderedPair }
     * 
     */
    public OrderedPair createOrderedPair() {
        return new OrderedPair();
    }

    /**
     * Create an instance of {@link Instance }
     * 
     */
    public Instance createS23MInstance() {
        return new Instance();
    }

    /**
     * Create an instance of {@link VariableType }
     * 
     */
    public VariableType createVariableType() {
        return new VariableType();
    }

    /**
     * Create an instance of {@link Values }
     * 
     */
    public Values createInstanceTypeValues() {
        return new Values();
    }

    /**
     * Create an instance of {@link Variables }
     * 
     */
    public Variables createInstanceTypeVariables() {
        return new Variables();
    }

    /**
     * Create an instance of {@link InstanceType }
     * 
     */
    public InstanceType createInstanceType() {
        return new InstanceType();
    }

    /**
     * Create an instance of {@link QueryType }
     * 
     */
    public QueryType createQueryType() {
        return new QueryType();
    }

    /**
     * Create an instance of {@link VisibilityType }
     * 
     */
    public VisibilityType createVisibilityType() {
        return new VisibilityType();
    }

    /**
     * Create an instance of {@link SuperSetReferenceType }
     * 
     */
    public SuperSetReferenceType createSuperSetReferenceType() {
        return new SuperSetReferenceType();
    }

    /**
     * Create an instance of {@link CommandType }
     * 
     */
    public CommandType createCommandType() {
        return new CommandType();
    }

    /**
     * Create an instance of {@link LinkType }
     * 
     */
    public LinkType createLinkType() {
        return new LinkType();
    }

    /**
     * Create an instance of {@link EdgeType }
     * 
     */
    public EdgeType createEdgeType() {
        return new EdgeType();
    }

    /**
     * Create an instance of {@link SemanticIdType }
     * 
     */
    public SemanticIdType createSemanticIdType() {
        return new SemanticIdType();
    }

    /**
     * Create an instance of {@link EdgeEnd }
     * 
     */
    public EdgeEnd createEdgeTypeEdgeEnd() {
        return new EdgeEnd();
    }

    /**
     * Create an instance of {@link EdgeTraceType }
     * 
     */
    public EdgeTraceType createEdgeTraceType() {
        return new EdgeTraceType();
    }

    /**
     * Create an instance of {@link ValueType }
     * 
     */
    public ValueType createValueType() {
        return new ValueType();
    }

}
